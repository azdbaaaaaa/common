apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: devops-ingress
  namespace: istio-system
  labels:
    app: devops-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-1:991619025488:certificate/ed8fc667-3a4e-4557-b256-ee1a2c0e4cab
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
#    alb.ingress.kubernetes.io/subnets: "subnet-04ba1efba31cd200a"
#    alb.ingress.kubernetes.io/security-groups: "sg-0c60f592dd71afeba"
spec:
  rules:
    - host: grafana.lightreader.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 3000
    - host: kiali.lightreader.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kiali
                port:
                  number: 20001 
    - host: prometheus.lightreader.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: prometheus
                port:
                  number: 9090                   
    - host: tracing.lightreader.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: tracing
                port:
                  number: 80  