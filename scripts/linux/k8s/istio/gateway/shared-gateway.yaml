# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: istio-ingressgateway
#   namespace: istio-ingress
#   annotations:
#     kubernetes.io/ingress.class: alb
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-1:991619025488:certificate/ed8fc667-3a4e-4557-b256-ee1a2c0e4cab
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
#     alb.ingress.kubernetes.io/security-groups: "sg-0c60f592dd71afeba"
# spec:
#   rules:
#     - http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: istio-ingressgateway
#                 port:
#                   number: 80
# ---
apiVersion: v1
kind: Service
metadata:
  name: istio-ingressgateway
  namespace: istio-ingress
spec:
  type: LoadBalancer
  selector:
    istio: ingressgateway
  ports:
  - port: 80
    name: http
  - port: 443
    name: https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: istio-ingressgateway
  namespace: istio-ingress
spec:
  selector:
    matchLabels:
      istio: ingressgateway
  template:
    metadata:
      annotations:
        # Select the gateway injection template (rather than the default sidecar template)
        inject.istio.io/templates: gateway
      labels:
        # Set a unique label for the gateway. This is required to ensure Gateways can select this workload
        istio: ingressgateway
        # Enable gateway injection. If connecting to a revisioned control plane, replace with "istio.io/rev: revision-name"
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - name: istio-proxy
        image: auto # The image will automatically update each time the pod starts.
---
# # Set up roles to allow reading credentials for TLS
# apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
# metadata:
#   name: istio-ingressgateway-sds
#   namespace: istio-ingress
# rules:
# - apiGroups: [""]
#   resources: ["secrets"]
#   verbs: ["get", "watch", "list"]
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: istio-ingressgateway-sds
#   namespace: istio-ingress
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: Role
#   name: istio-ingressgateway-sds
# subjects:
# - kind: ServiceAccount
#   name: default
